{"version":3,"sources":["components/transitions/pop.module.css","components/Notification/Notification.module.css","components/Filter/Filter.module.css","components/Title/Title.module.css","components/transitions/slideError.module.css","components/transitions/slide.module.css","components/Title/Title.jsx","redux/selectors.js","components/ContactList/ContactList.jsx","components/ContactList/ContactListContainer.jsx","redux/contacts/phoneBookActions.jsx","redux/actionsType.js","components/Notification/Notification.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","redux/filter/filterActions.jsx","components/App/App.jsx","redux/contacts/phoneBookReducer.jsx","redux/filter/filterReducer.jsx","redux/middleware/contactCheck.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","Title","className","styles","title","selectFilter","state","filter","selectContacts","contacts","ContactList","onDeleteContact","TransitionGroup","component","listContacts","map","id","name","number","CSSTransition","key","timeout","unmountOnExit","classNames","popTransition","nameField","phoneField","type","deleteBtn","value","onClick","connect","contact","toLowerCase","includes","dispatch","payload","phoneBookActions","Notification","notificationContainer","notificationMessage","ContactForm","isExist","handleInput","e","setState","target","handleSubmit","preventDefault","props","some","setTimeout","onAddContact","this","contactForm","onSubmit","contactInput","onChange","required","mask","placeholder","addButton","in","slideError","PureComponent","uuidv4","onChangeFilter","filterActions","length","filterForm","filterContact","App","isLoading","contactsWrapper","slide","Component","INITIAL_STATE","phoneBookReducer","filterReducer","contactCheck","store","next","action","getState","rootReducer","combineReducers","enhancer","applyMiddleware","save","createStore","load","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b9fa9e22.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__33fi8\",\"enterActive\":\"pop_enterActive__3YVg0\",\"exit\":\"pop_exit__Bw4it\",\"exitActive\":\"pop_exitActive__JHzXc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notificationContainer\":\"Notification_notificationContainer__3UbIp\",\"notificationMessage\":\"Notification_notificationMessage__3Z7bh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterForm\":\"Filter_filterForm__1WNPC\",\"filterContact\":\"Filter_filterContact__29VTV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__2jgde\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slideError_enter__BrdRI\",\"enterActive\":\"slideError_enterActive__2KrDp\",\"exit\":\"slideError_exit__31gR2\",\"exitActive\":\"slideError_exitActive__35GW2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__3M6zG\",\"enterActive\":\"slide_enterActive__1_Yl-\"};","import React from \"react\";\r\nimport styles from \"./Title.module.css\"\r\n\r\nconst Title = () => (\r\n  <div>\r\n    <h1 className={styles.title}>Phonebook</h1>\r\n  </div>\r\n);\r\n\r\nexport default Title;\r\n","export const selectFilter = state => state.filter;\r\nexport const selectContacts = state => state.contacts;","import React from \"react\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport popTransition from \"../transitions/pop.module.css\";\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <TransitionGroup component=\"ul\" className={styles.listContacts}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <CSSTransition\r\n        key={id}\r\n        timeout={250}\r\n        unmountOnExit\r\n        classNames={popTransition}\r\n      >\r\n        <li key={id} className={styles.contacts}>\r\n          <span className={styles.nameField}>{name}</span>\r\n          <span className={styles.phoneField}>{number}</span>\r\n          <button\r\n            type=\"button\"\r\n            className={styles.deleteBtn}\r\n            value={id}\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            X\r\n          </button>\r\n        </li>\r\n      </CSSTransition>\r\n    ))}\r\n  </TransitionGroup>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired\r\n    })\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ContactList;\r\n","import { connect } from \"react-redux\";\r\nimport * as phoneBookActions from \"../../redux/contacts/phoneBookActions\";\r\nimport { selectFilter, selectContacts } from \"../../redux/selectors\";\r\nimport ContactList from \"./ContactList\";\r\n\r\nconst mSTP = state => {\r\n  return {\r\n    filter: selectFilter(state),\r\n    contacts: selectContacts(state).filter(contact =>\r\n      contact.name.toLowerCase().includes(selectFilter(state).toLowerCase())\r\n    )\r\n  };\r\n};\r\n\r\nconst mDTP = dispatch => {\r\n  return {\r\n    onDeleteContact: id => dispatch(phoneBookActions.deleteContact(id))\r\n  };\r\n};\r\n\r\nexport default connect(mSTP, mDTP)(ContactList);\r\n","import * as Type from \"../actionsType\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport const addContact = ({ name, number }) => {\r\n  return {\r\n    type: Type.ADD_CONTACT,\r\n    payload: {\r\n      id: uuidv4(),\r\n      name,\r\n      number\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteContact = id => {\r\n  return {\r\n    type: Type.DELETE_CONTACT,\r\n    payload: {\r\n      id\r\n    }\r\n  };\r\n};\r\n","export const ADD_CONTACT = \"ADD_CONTACT\";\r\nexport const DELETE_CONTACT = \"DELETE_CONTACT\";\r\nexport const CHANGE_FILTER = \"CHANGE_FILTER\";\r\n","import React from \"react\";\r\nimport styles from \"./Notification.module.css\";\r\n\r\nconst Notification = () => (\r\n  <div className={styles.notificationContainer}>\r\n    <p className={styles.notificationMessage}>This contact already exists!</p>\r\n  </div>\r\n);\r\n\r\nexport default Notification;\r\n","import React, { PureComponent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { selectContacts } from \"../../redux/selectors\";\r\nimport * as phoneBookActions from \"../../redux/contacts/phoneBookActions\";\r\nimport InputTelMask from \"react-input-mask\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport slideError from \"../transitions/slideError.module.css\";\r\n\r\nclass ContactForm extends PureComponent {\r\n  static propTypes = {\r\n    onAddContact: PropTypes.func.isRequired\r\n  };\r\n\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    isExist: false\r\n  };\r\n\r\n  handleInput = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { contacts } = this.props;\r\n    const { name } = this.state;\r\n\r\n    if (contacts.some(contact => contact.name === name)) {\r\n      this.setState({ isExist: true });\r\n\r\n      setTimeout(() => {\r\n        this.setState({ isExist: false });\r\n      }, 2000);\r\n    } else {\r\n      this.props.onAddContact({ ...this.state });\r\n    }\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\"\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number, isExist } = this.state;\r\n    return (\r\n      <div>\r\n        <form className={styles.contactForm} onSubmit={this.handleSubmit}>\r\n          <label>Name</label>\r\n          <input\r\n            type=\"text\"\r\n            className={styles.contactInput}\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleInput}\r\n            required\r\n          />\r\n          <label>Number</label>\r\n          <InputTelMask\r\n            mask=\"999-99-99\"\r\n            type=\"tel\"\r\n            className={styles.contactInput}\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleInput}\r\n            placeholder=\"only numbers\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"submit\"\r\n            className={styles.addButton}\r\n            value=\"Add contact\"\r\n          />\r\n        </form>\r\n        <CSSTransition\r\n          in={isExist}\r\n          timeout={250}\r\n          classNames={slideError}\r\n          unmountOnExit\r\n        >\r\n          <Notification />\r\n        </CSSTransition>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mSTP = state => {\r\n  return {\r\n    contacts: selectContacts(state)\r\n  };\r\n};\r\n\r\nconst mDTP = dispatch => {\r\n  return {\r\n    onAddContact: ({ name, number }) =>\r\n      dispatch(phoneBookActions.addContact({ name, number }))\r\n  };\r\n};\r\n\r\nexport default connect(mSTP, mDTP)(ContactForm);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { selectFilter, selectContacts } from \"../../redux/selectors\";\r\nimport * as filterActions from \"../../redux/filter/filterActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\nimport popTransition from \"../transitions/pop.module.css\";\r\n\r\nconst Filter = ({ contacts, value, onChangeFilter }) =>\r\n  contacts.length > 2 && (\r\n    <CSSTransition\r\n      in={true}\r\n      timeout={250}\r\n      unmountOnExit\r\n      classNames={popTransition}\r\n    >\r\n      <form className={styles.filterForm}>\r\n        <label>Find contact by name</label>\r\n        <input\r\n          type=\"text\"\r\n          className={styles.filterContact}\r\n          value={value}\r\n          onChange={e => onChangeFilter(e.target.value)}\r\n        />\r\n      </form>\r\n    </CSSTransition>\r\n  );\r\n\r\nFilter.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired\r\n    })\r\n  ).isRequired,\r\n  value: PropTypes.string,\r\n  onChangeFilter: PropTypes.func.isRequired\r\n};\r\n\r\nconst mSTP = state => {\r\n  return {\r\n    filter: selectFilter(state),\r\n    contacts: selectContacts(state)\r\n  };\r\n};\r\n\r\nconst mDTP = dispatch => {\r\n  return {\r\n    onChangeFilter: value => dispatch(filterActions.changeFilter(value))\r\n  };\r\n};\r\n\r\nexport default connect(mSTP, mDTP)(Filter);\r\n","import * as Type from \"../actionsType\";\r\n\r\nexport const changeFilter = value => {\r\n  return {\r\n    type: Type.CHANGE_FILTER,\r\n    payload: {\r\n      filter: value\r\n    }\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport Title from \"../Title/Title\";\nimport ContactList from \"./../ContactList/ContactListContainer\";\nimport ContactForm from \"./../ContactForm/ContactForm\";\nimport Filter from \"./../Filter/Filter\";\nimport styles from \"./../ContactForm/ContactForm.module.css\";\nimport slide from \"../transitions/slide.module.css\";\n\n\nclass App extends Component {\n  state = {\n    isLoading: false\n  };\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({ isLoading: true });\n    }, 0);\n  }\n\n  render() {\n    const { isLoading } = this.state;\n    return (\n      <div className={styles.contactsWrapper}>\n        <CSSTransition\n          in={isLoading}\n          timeout={500}\n          classNames={slide}\n          unmountOnExit\n        >\n          <Title />\n        </CSSTransition>\n        \n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    );\n  }\n}\n\nexport default (App);\n","import * as Type from \"../actionsType\";\r\n\r\n\r\nconst INITIAL_STATE = [\r\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" }\r\n];\r\n\r\nconst phoneBookReducer = (state = INITIAL_STATE, { type, payload }) => {\r\n  switch (type) {\r\n    case Type.ADD_CONTACT:\r\n      return [...state, payload];\r\n\r\n    case Type.DELETE_CONTACT:\r\n      return state.filter(contact => contact.id !== payload.id);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default phoneBookReducer;\r\n","import * as Type from \"../actionsType\";\r\n\r\nconst filterReducer = (filter = \"\", { type, payload }) => {\r\n  switch (type) {\r\n    case Type.CHANGE_FILTER:\r\n      return payload.filter;\r\n    default:\r\n      return filter;\r\n  }\r\n};\r\n\r\nexport default filterReducer;\r\n","const contactCheck = store => next => action => {\r\n  const contacts = store.getState().contacts;\r\n\r\n  if (contacts.some(contact => contact.name === action.payload.name)) {\r\n  } else {\r\n    next(action);\r\n  }\r\n};\r\n\r\nexport default contactCheck;\r\n\r\n\r\n// оставил для себя пример рабочего middleware.","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\n//import { configureStore } from \"@reduxjs/toolkit\";\r\nimport phoneBookReducer from \"./contacts/phoneBookReducer\";\r\nimport filterReducer from \"./filter/filterReducer\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { save, load } from \"redux-localstorage-simple\";\r\nimport contactCheck from \"./middleware/contactCheck\";\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: phoneBookReducer,\r\n  filter: filterReducer\r\n});\r\n\r\nconst enhancer = applyMiddleware(contactCheck, save());\r\n\r\nconst store = createStore(rootReducer, load(), composeWithDevTools(enhancer));\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./components/App/App\";\nimport store from \"./redux/store\"\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsWrapper\":\"ContactForm_contactsWrapper__HlBXo\",\"contactForm\":\"ContactForm_contactForm__HIsLJ\",\"contactInput\":\"ContactForm_contactInput__1drys\",\"addButton\":\"ContactForm_addButton__cjtFC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listContacts\":\"ContactList_listContacts__LjFgh\",\"contacts\":\"ContactList_contacts__2_pJw\",\"nameField\":\"ContactList_nameField__2PDdc\",\"phoneField\":\"ContactList_phoneField__11Br2\",\"deleteBtn\":\"ContactList_deleteBtn__JSPUi\"};"],"sourceRoot":""}